{"version":3,"sources":["components/subtotal/SubTotal.js","components/pickupsavings/PickupSavings.js","components/taxesfees/TaxesFees.js","components/estimatedtotal/EstimatedTotal.js","components/itemdetails/ItemDetails.js","actions/promoCodeActions.js","actions/types.js","components/promocode/PromoCode.js","App.js","serviceWorker.js","reducers/promoCodeReducer.js","reducers/index.js","store.js","index.js"],"names":["SubTotal","Row","className","Col","md","this","props","price","Component","styles","pickupSavings","textDecoration","totalSavings","color","fontWeight","PickupSavings","tooltip","Tooltip","OverlayTrigger","placement","overlay","style","TaxesFees","taxes","EstimatedTotal","xs","Itemdetails","state","open","Button","variant","onClick","setState","Collapse","in","Media","width","height","src","alt","Body","handleChange","e","dispatch","type","payload","target","value","PromoCodeDiscount","Form","Group","controlId","Label","Control","placeholder","promoCode","onChange","block","disabled","isDisabled","giveDiscount","connect","App","total","estimatedTotal","disablePromoButton","componentDidMount","giveDiscountHandler","Container","toFixed","PromoCode","Boolean","window","location","hostname","match","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.97d69f93.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\nexport default class SubTotal extends Component {\r\n    render(){\r\n        return(\r\n            <Row className=\"show-grid\">\r\n                <Col md={6}>Subtotal</Col>\r\n                <Col md={6}>{`$${this.props.price}`}</Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport { Row, Col, Tooltip, OverlayTrigger } from 'react-bootstrap';\r\n\r\nconst styles = {\r\n    pickupSavings: {\r\n        textDecoration: 'underline'\r\n    },\r\n    totalSavings: {\r\n        color: 'red',\r\n        fontWeight: 800\r\n    }\r\n}\r\n\r\nexport default class PickupSavings extends Component {\r\n    render(){\r\n        const tooltip = <Tooltip>\r\n            <p>Picking up your order in the store helps cut costs, and we pass the savings to you</p>\r\n        </Tooltip>\r\n\r\n        return (\r\n            <Row className=\"show-grid\">\r\n                <Col md={6}>\r\n                    <OverlayTrigger placement=\"bottom\" overlay={tooltip}>\r\n                        <div style={styles.pickupSavings}>Pickup Savings</div>\r\n                    </OverlayTrigger>\r\n                </Col>\r\n                <Col style={styles.totalSavings} md={6}>{`$${this.props.price}`}</Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\n\r\nexport default class TaxesFees extends Component {\r\n    render(){\r\n        return (\r\n            <Row className=\"show-grid\">\r\n                <Col md={6}>Est. taxes and fees (Based on 9408)</Col>\r\n                <Col md={6}>{`$${this.props.taxes}`}</Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport {Row, Col} from 'react-bootstrap';\r\n\r\nexport default class EstimatedTotal extends Component {\r\n    render(){\r\n        return (\r\n            <Row>\r\n                <Col xs={6}><h4>Est. Total</h4></Col>\r\n                <Col xs={6}><h4>{`$${this.props.price}`}</h4></Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Button, Collapse, Media, Row, Col } from 'react-bootstrap';\r\n\r\nexport default class Itemdetails extends Component {\r\n    state = {\r\n        open: false,\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Button\r\n                    variant=\"link\"\r\n                    onClick={() => this.setState({ open: !this.state.open })}\r\n                >\r\n                 { this.state.open === false ? 'See' : 'Hide' } item details\r\n                 { this.state.open === false ? ' +' : ' -' }\r\n                </Button>\r\n                <Collapse in={this.state.open}>\r\n                    <div>\r\n                        <Media>\r\n                            <img\r\n                                width={100}\r\n                                height={100}\r\n                                className=\"mr-3\"\r\n                                src=\"https://i5.walmartimages.com/asr/e73e1252-642c-4473-93ea-fd3b564a7027_1.3e81ea58fa3042452fe185129a4a865f.jpeg?odnWidth=undefined&odnHeight=undefined&odnBg=ffffff\"\r\n                                alt=\"thumbnail\"\r\n                            />\r\n                            <Media.Body>\r\n                                <p>Essentials by ORM ESS-3085 Racing Style Gaming Chair,Red</p>\r\n                                <Row className=\"show-grid\">\r\n                                    <Col md={6}>\r\n                                        <strong>{`$${this.props.price}`}</strong>\r\n                                        <br />\r\n                                        <strong className=\"price-strike\">\r\n                                            {`$${this.props.price}`}\r\n                                        </strong>\r\n                                    </Col>\r\n                                    <Col md={6}> Qty: 1 </Col>\r\n                                </Row>\r\n                            </Media.Body>\r\n                        </Media>\r\n                    </div>\r\n                </Collapse>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { PROMO_CODE } from './types';\r\n\r\nexport const handleChange = e => dispatch => {\r\n    dispatch({\r\n        type: PROMO_CODE,\r\n        payload: e.target.value\r\n    })\r\n}\r\n","export const PROMO_CODE = 'PROMO_CODE';\r\n","import React, { Component } from 'react';\r\nimport { Button, Collapse, Form, Row, Col } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { handleChange } from '../../actions/promoCodeActions';\r\n\r\nclass PromoCodeDiscount extends Component {\r\n    state = {\r\n        open: false,\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.props.handleChange(e);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Button\r\n                    variant=\"link\"\r\n                    onClick={() => this.setState({ open: !this.state.open})}\r\n                >\r\n                    { this.state.open === false ? 'Apply' : 'Hide' } promo code\r\n                    { this.state.open === false ? ' +' : ' -' }\r\n                </Button>\r\n                <Collapse in={this.state.open}>\r\n                    <div>\r\n                        <Row className=\"show-grid\">\r\n                            <Col md={12}>\r\n                                <Form>\r\n                                    <Form.Group controlId=\"formInlineName\">\r\n                                        <Form.Label>Promo Code</Form.Label>\r\n                                        <Form.Control \r\n                                            type=\"text\" \r\n                                            placeholder={this.props.promoCode}\r\n                                            onChange={this.props.handleChange}\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Button\r\n                                        variant=\"success\"\r\n                                        block\r\n                                        className=\"btn-round\"\r\n                                        disabled={this.props.isDisabled}\r\n                                        onClick={this.props.giveDiscount}\r\n                                    >\r\n                                        Apply\r\n                                    </Button>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Collapse>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    promoCode:  state.promoCode.value\r\n});\r\n\r\nexport default connect(mapStateToProps, { handleChange } )(PromoCodeDiscount);\r\n","import React, { Component } from 'react';\nimport { Container } from 'react-bootstrap';\n\nimport SubTotal from './components/subtotal/SubTotal';\nimport PickupSavings from './components/pickupsavings/PickupSavings';\nimport TaxesFees from './components/taxesfees/TaxesFees';\nimport EstimatedTotal from './components/estimatedtotal/EstimatedTotal';\nimport ItemDetails from './components/itemdetails/ItemDetails';\nimport PromoCodeDiscount from './components/promocode/PromoCode';\n\nimport { connect } from 'react-redux';\nimport { handleChange } from './actions/promoCodeActions';\n\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    total: 100,\n    pickupSavings: -3.85,\n    taxes: 0,\n    estimatedTotal: 0,\n    disablePromoButton: false,\n  }\n\n  componentDidMount = () => {\n    this.setState( \n      {\n        taxes: (this.state.total + this.state.pickupSavings) * 0.0875\n      },\n      function() {\n        this.setState({\n          estimatedTotal: this.state.total + this.state.pickupSavings + this.state.taxes\n        });\n      }\n    );\n  };\n\n  giveDiscountHandler = () => {\n    if(this.props.promoCode === 'DISCOUNT'){\n      this.setState(\n        {\n          estimatedTotal: this.state.estimatedTotal * 0.9\n        },\n        function() {\n          this.setState({\n            disablePromoButton: true\n          })\n        }\n      )\n    }\n  }\n\n  render(){\n    return (\n      <div className=\"container\">\n        <Container className=\"purchase-card\">\n          <SubTotal price={this.state.total.toFixed(2)} />\n          <PickupSavings price={this.state.pickupSavings}/>\n          <TaxesFees taxes={this.state.taxes.toFixed(2)}/>\n          <hr />\n          <EstimatedTotal price={this.state.estimatedTotal.toFixed(2)}/>\n          <ItemDetails price={this.state.estimatedTotal.toFixed(2)}/>\n          <hr />\n          <PromoCodeDiscount \n            giveDiscount={() => this.giveDiscountHandler()}\n            isDisabled={this.state.disablePromoButton}\n          />\n        </Container>\n      </div>  \n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  promoCode: state.promoCode.value\n})\n\nexport default connect(mapStateToProps, { handleChange })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { PROMO_CODE } from '../actions/types';\r\n\r\nconst initialState = {\r\n    open: false,\r\n    value: ''\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type) {\r\n        case PROMO_CODE:\r\n            return {...state, value: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\n\r\nimport promoCodeReducer from './promoCodeReducer';\r\n\r\nexport default combineReducers({\r\n    promoCode: promoCodeReducer\r\n})\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware)\r\n    )\r\n)\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}